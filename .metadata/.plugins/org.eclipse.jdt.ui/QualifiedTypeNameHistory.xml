<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="com.sun.security.jwt.api.util.JwtUtil"/>
    <fullyQualifiedTypeName name="com.sun.security.jwt.api.service.CustomUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="com.sun.security.jwt.api.filter.JwtFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="com.sun.microservice.photoapp.api.AuthorizationHeaderFilter.config"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.apache.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="com.sun.microservice.photoapp.api.AuthorizationHeaderFilter"/>
    <fullyQualifiedTypeName name="com.sun.microservice.photoapp.api.AuthorizationHeaderFilter.Config"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.lang.Boolean"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.repositary.OrderRepositary"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.service.OrderService"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.annotation.RequestScope"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.sun.microservices.paymentservice.api.repositary.PaymentRepositary"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.sun.microservices.paymentservice.api.service.PaymentService"/>
    <fullyQualifiedTypeName name="com.sun.microservices.paymentservice.api.entity.Payment"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.entity.Order"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.dto.TransactionRequest"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.dto.Payment"/>
    <fullyQualifiedTypeName name="com.sun.microservices.orderservice.api.dto.TransactionResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
</qualifiedTypeNameHistroy>
